[
    {
        "id": "5bd5e23aadd26b8d",
        "type": "tab",
        "label": "Set GeoIP ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6b2035a9.ca9f5c",
        "type": "tab",
        "label": "Pub/Sub Perf Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d3c4c932fa0ad433",
        "type": "tab",
        "label": "Command/Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a033ecf7.19ef2",
        "type": "tab",
        "label": "Client State",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f51fc5811b06d1db",
        "type": "tab",
        "label": "dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c9fafa.7dd6a5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "demo-na.mqtttest.com",
        "port": "8883",
        "tls": "2d748829.2503d8",
        "clientid": "$(CLIENTID)",
        "autoConnect": true,
        "usetls": true,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "demo/security/clientstate/connected",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "$(CLIENTID)",
        "birthMsg": {},
        "closeTopic": "demo/security/clientstate/closed",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "$(CLIENTID)",
        "closeMsg": {},
        "willTopic": "demo/security/clientstate/lastwill",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "$(CLIENTID)",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2d748829.2503d8",
        "type": "tls-config",
        "name": "demo-na.mqtttest.com",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "demo-na.mqtttest.com",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "c7809b33.ca4548",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6d919544.7af97c",
        "type": "ui_group",
        "name": "Security Masters Demo",
        "tab": "c7809b33.ca4548",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cb978cdcbb341010",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "fde17ba4e8f07cec",
        "type": "gauth",
        "name": "node-red@fluted-sentry-260301.iam.gserviceaccount.com"
    },
    {
        "id": "791e80b3.11014",
        "type": "ui_group",
        "name": "Latency",
        "tab": "a06ddef.76e0f2",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false
    },
    {
        "id": "a4089a2e.e45d68",
        "type": "tls-config",
        "name": "demo-na.mqtttest.com",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "demo-na.mqtttest.com",
        "verifyservercert": true
    },
    {
        "id": "a06ddef.76e0f2",
        "type": "ui_tab",
        "name": "Latency",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1f299c39b8c3d88",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "a477c9f8239cb43f",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 6,
        "width": 10,
        "height": 1
    },
    {
        "id": "7259d910ccdb8ddc",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 7,
        "width": 10,
        "height": 1
    },
    {
        "id": "d52ab9305b432c86",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 8,
        "width": 10,
        "height": 1
    },
    {
        "id": "d7b299a1ad9d4418",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 9,
        "width": 10,
        "height": 1
    },
    {
        "id": "9e5a9a6327014b02",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 10,
        "width": 10,
        "height": 1
    },
    {
        "id": "9fe5be44f155c774",
        "type": "ui_spacer",
        "z": "f51fc5811b06d1db",
        "name": "spacer",
        "group": "6d919544.7af97c",
        "order": 11,
        "width": 10,
        "height": 1
    },
    {
        "id": "2280f0fe.38e8e",
        "type": "http request",
        "z": "5bd5e23aadd26b8d",
        "name": "Lookup public IP address",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "wgetip.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "6d6e68ee.4521e8",
                "53fadfdcf2708014",
                "aa72db81.297168"
            ]
        ]
    },
    {
        "id": "6d6e68ee.4521e8",
        "type": "template",
        "z": "5bd5e23aadd26b8d",
        "name": "Format GeoIP Lookup",
        "field": "url",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "http://ip-api.com/json/{{payload}}",
        "output": "str",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "bec661d5.81376"
            ]
        ]
    },
    {
        "id": "bec661d5.81376",
        "type": "http request",
        "z": "5bd5e23aadd26b8d",
        "name": "GeoIP Lookup",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 180,
        "y": 220,
        "wires": [
            [
                "fff7a75a.2f5218"
            ]
        ]
    },
    {
        "id": "fff7a75a.2f5218",
        "type": "change",
        "z": "5bd5e23aadd26b8d",
        "name": "Set Global Variables ",
        "rules": [
            {
                "t": "set",
                "p": "regionName",
                "pt": "global",
                "to": "payload.regionName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "countryCode",
                "pt": "global",
                "to": "payload.countryCode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "org",
                "pt": "global",
                "to": "payload.org",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 260,
        "wires": [
            [
                "84073e45.1a5"
            ]
        ]
    },
    {
        "id": "84073e45.1a5",
        "type": "template",
        "z": "5bd5e23aadd26b8d",
        "name": "Format iplocation file",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\"regionName\":\"{{payload.regionName}}\",\"countryCode\":\"{{payload.countryCode}}\",\"org\":\"{{payload.org}}\"}",
        "output": "str",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "d6e714be.cc9d48"
            ]
        ]
    },
    {
        "id": "d6e714be.cc9d48",
        "type": "file",
        "z": "5bd5e23aadd26b8d",
        "name": "write iplocation file to disk ",
        "filename": "/data/iplocation",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "316b8d06d6a87ed8"
            ]
        ]
    },
    {
        "id": "27622c68909fd703",
        "type": "inject",
        "z": "5bd5e23aadd26b8d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "2280f0fe.38e8e"
            ]
        ]
    },
    {
        "id": "316b8d06d6a87ed8",
        "type": "debug",
        "z": "5bd5e23aadd26b8d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 340,
        "wires": []
    },
    {
        "id": "9f793fb6.e5e62",
        "type": "GSheet",
        "z": "5bd5e23aadd26b8d",
        "creds": "fde17ba4e8f07cec",
        "method": "append",
        "action": "",
        "sheet": "1FJCC7p_rZ7xT8hfc9NGfItQturn0tiPblKlAFc5-qc8",
        "cells": "Sheet1!A1:A2",
        "flatten": false,
        "name": "Write node-RED URL to GSheet",
        "x": 710,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "aa72db81.297168",
        "type": "template",
        "z": "5bd5e23aadd26b8d",
        "name": "Form URL for Node-Red",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "http://{{payload}}:1880",
        "output": "str",
        "x": 710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "53fadfdcf2708014",
        "type": "debug",
        "z": "5bd5e23aadd26b8d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 160,
        "wires": []
    },
    {
        "id": "f26ca21.902e66",
        "type": "inject",
        "z": "6b2035a9.ca9f5c",
        "name": "Inject every 10 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "fab80017.7942b"
            ]
        ]
    },
    {
        "id": "6267bed2.9eb7e",
        "type": "function",
        "z": "6b2035a9.ca9f5c",
        "name": "Add current epoch timestamp ",
        "func": "msg.payload.timestamp = Date.now() \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 280,
        "wires": [
            [
                "57e94275.f8172c",
                "ca1558fd776c25f6"
            ]
        ]
    },
    {
        "id": "57e94275.f8172c",
        "type": "mqtt out",
        "z": "6b2035a9.ca9f5c",
        "name": "publish to EdgeConnect",
        "topic": "demo/latency/publish",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 170,
        "y": 320,
        "wires": []
    },
    {
        "id": "648fdca2.9de5c4",
        "type": "mqtt in",
        "z": "6b2035a9.ca9f5c",
        "name": "Listen for Publish Messages",
        "topic": "demo/security/latency/publish",
        "qos": "2",
        "datatype": "json",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 460,
        "wires": [
            [
                "958e594e.3c2e08"
            ]
        ]
    },
    {
        "id": "958e594e.3c2e08",
        "type": "function",
        "z": "6b2035a9.ca9f5c",
        "name": "Calculate Time Difference ",
        "func": "var now = Date.now();\nvar then = msg.payload.time;\nmsg.payload.latency = now - then;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 520,
        "wires": [
            [
                "4054b25f.85648c"
            ]
        ]
    },
    {
        "id": "fab80017.7942b",
        "type": "template",
        "z": "6b2035a9.ca9f5c",
        "name": "Extract Geo and Org info from global variables",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"publishregion\":\"{{global.regionName}}\",\"publishcountry\":\"{{global.countryCode}}\",\"publishorg\":\"{{global.org}}\"}",
        "output": "json",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "6267bed2.9eb7e"
            ]
        ]
    },
    {
        "id": "4054b25f.85648c",
        "type": "change",
        "z": "6b2035a9.ca9f5c",
        "name": "Extract Geo Location from Global Variables",
        "rules": [
            {
                "t": "set",
                "p": "payload.regionName",
                "pt": "msg",
                "to": "regionName",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.countryCode",
                "pt": "msg",
                "to": "countryCode",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.org",
                "pt": "msg",
                "to": "org",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 560,
        "wires": [
            [
                "e270e69d.557118",
                "295f045faac12c46"
            ]
        ]
    },
    {
        "id": "dcfa11ab.24416",
        "type": "comment",
        "z": "6b2035a9.ca9f5c",
        "name": "Publisher",
        "info": "",
        "x": 130,
        "y": 160,
        "wires": []
    },
    {
        "id": "e270e69d.557118",
        "type": "mqtt out",
        "z": "6b2035a9.ca9f5c",
        "name": "publish results to Edge Connect",
        "topic": "demo/security/latency/results",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 190,
        "y": 600,
        "wires": []
    },
    {
        "id": "578b0ad2.ac3a24",
        "type": "comment",
        "z": "6b2035a9.ca9f5c",
        "name": "Subscriber",
        "info": "",
        "x": 120,
        "y": 380,
        "wires": []
    },
    {
        "id": "295f045faac12c46",
        "type": "debug",
        "z": "6b2035a9.ca9f5c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "ca1558fd776c25f6",
        "type": "debug",
        "z": "6b2035a9.ca9f5c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "e63279a333430243",
        "type": "inject",
        "z": "6b2035a9.ca9f5c",
        "name": "Inject every 10 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 490,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b241657ecd94e4d5",
        "type": "function",
        "z": "6b2035a9.ca9f5c",
        "name": "Add current epoch timestamp ",
        "func": "msg.payload.time = Date.now() \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c3c65a1122f9097c",
        "type": "template",
        "z": "6b2035a9.ca9f5c",
        "name": "Extract Geo and Org info from global variables",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"publishregion\":\"{{global.regionName}}\",\"publishcountry\":\"{{global.countryCode}}\",\"publishorg\":\"{{global.org}}\"}",
        "output": "json",
        "x": 840,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8b729069e4fae062",
        "type": "mqtt in",
        "z": "d3c4c932fa0ad433",
        "d": true,
        "name": "Listen on Control Topic ",
        "topic": "demo/security/control",
        "qos": "2",
        "datatype": "json",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "5872a3052b7c12d6"
            ]
        ]
    },
    {
        "id": "5872a3052b7c12d6",
        "type": "switch",
        "z": "d3c4c932fa0ad433",
        "name": "Check if clientid is self or all ",
        "property": "payload.clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLIENTID",
                "vt": "env"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "94b449353b48ae65"
            ],
            [
                "94b449353b48ae65"
            ],
            []
        ]
    },
    {
        "id": "358a9b79e77033f8",
        "type": "comment",
        "z": "d3c4c932fa0ad433",
        "name": "Otherwise Ignore",
        "info": "",
        "x": 360,
        "y": 220,
        "wires": []
    },
    {
        "id": "0e138ecc479f8138",
        "type": "comment",
        "z": "d3c4c932fa0ad433",
        "name": "Process",
        "info": "",
        "x": 380,
        "y": 120,
        "wires": []
    },
    {
        "id": "94b449353b48ae65",
        "type": "switch",
        "z": "d3c4c932fa0ad433",
        "name": "Check Command Type",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exec",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "api",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "9bae47b5adc2d938"
            ],
            [
                "3cb93eed8b48e5ec"
            ]
        ]
    },
    {
        "id": "ef006acee64ad842",
        "type": "http request",
        "z": "d3c4c932fa0ad433",
        "name": "API requests",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 70,
        "y": 560,
        "wires": [
            [
                "93cac3716a0dea8f"
            ]
        ]
    },
    {
        "id": "3c85f295848674b8",
        "type": "exec",
        "z": "d3c4c932fa0ad433",
        "d": true,
        "command": "",
        "addpay": "exec",
        "append": "",
        "useSpawn": "true",
        "timer": "120",
        "winHide": false,
        "oldrc": false,
        "name": "exec commands",
        "x": 530,
        "y": 560,
        "wires": [
            [
                "7fa473161970a11b",
                "93cac3716a0dea8f"
            ],
            [
                "7fa473161970a11b",
                "93cac3716a0dea8f"
            ],
            [
                "7fa473161970a11b"
            ]
        ]
    },
    {
        "id": "8d9439e40cfdfa9c",
        "type": "comment",
        "z": "d3c4c932fa0ad433",
        "name": "node-red API requests",
        "info": "",
        "x": 100,
        "y": 420,
        "wires": []
    },
    {
        "id": "80cb0f6bb7e13a3b",
        "type": "comment",
        "z": "d3c4c932fa0ad433",
        "name": "exec commands",
        "info": "",
        "x": 400,
        "y": 440,
        "wires": []
    },
    {
        "id": "59b30b22a270af21",
        "type": "mqtt out",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "topic": "demo/security/control/response",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 310,
        "y": 780,
        "wires": []
    },
    {
        "id": "5b13ee680a0ab3a6",
        "type": "change",
        "z": "d3c4c932fa0ad433",
        "name": "Set Client ID on Response",
        "rules": [
            {
                "t": "set",
                "p": "payload.clientid",
                "pt": "msg",
                "to": "CLIENTID",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "exec",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.url",
                "pt": "msg",
                "to": "url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.method",
                "pt": "msg",
                "to": "method",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 720,
        "wires": [
            [
                "59b30b22a270af21",
                "70f62d6557b93965"
            ]
        ]
    },
    {
        "id": "70f62d6557b93965",
        "type": "debug",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 720,
        "wires": []
    },
    {
        "id": "7fa473161970a11b",
        "type": "debug",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "78d7a80a5c27e572",
        "type": "inject",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"clientid\":\"all\",\"type\":\"exec\",\"exec\":\"curl http://127.0.0.1:1880/webserver\"}",
        "payloadType": "json",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "5872a3052b7c12d6"
            ]
        ]
    },
    {
        "id": "9bae47b5adc2d938",
        "type": "change",
        "z": "d3c4c932fa0ad433",
        "name": "Normallze payload for input into exec node ",
        "rules": [
            {
                "t": "set",
                "p": "exec",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 500,
        "wires": [
            [
                "3c85f295848674b8"
            ]
        ]
    },
    {
        "id": "3cb93eed8b48e5ec",
        "type": "change",
        "z": "d3c4c932fa0ad433",
        "name": "normalize payload for input into http request node",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload.url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "payload.method",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "ef006acee64ad842"
            ]
        ]
    },
    {
        "id": "93cac3716a0dea8f",
        "type": "template",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"result\":\"{{payload}}\"}",
        "output": "json",
        "x": 460,
        "y": 660,
        "wires": [
            [
                "5b13ee680a0ab3a6"
            ]
        ]
    },
    {
        "id": "d51a6ce2141f1324",
        "type": "inject",
        "z": "d3c4c932fa0ad433",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"clientid\":\"all\",\"type\":\"api\",\"url\":\"http://127.0.0.1:1880/flows\",\"method\":\"GET\"}",
        "payloadType": "json",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "5872a3052b7c12d6"
            ]
        ]
    },
    {
        "id": "436a1d6f.2315b4",
        "type": "comment",
        "z": "a033ecf7.19ef2",
        "name": "Listen for Connect, Close, LWT messages",
        "info": "",
        "x": 230,
        "y": 100,
        "wires": []
    },
    {
        "id": "cbd5949e.b2cba8",
        "type": "mqtt in",
        "z": "a033ecf7.19ef2",
        "name": "Listen for Connect Messages",
        "topic": "demo/security/clientstate/connected",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "945a94ae.cd5268",
                "325aebe7.dcf154"
            ]
        ]
    },
    {
        "id": "8bfb700.f83579",
        "type": "file",
        "z": "a033ecf7.19ef2",
        "name": "Write Client State File",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 860,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "945a94ae.cd5268",
        "type": "template",
        "z": "a033ecf7.19ef2",
        "name": "Set Filename",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/data/clientstate/{{payload}}",
        "output": "str",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "8bfb700.f83579"
            ]
        ]
    },
    {
        "id": "1fcead07.37b343",
        "type": "mqtt in",
        "z": "a033ecf7.19ef2",
        "name": "Listen for Close Messages",
        "topic": "demo/security/clientstate/closed",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "ea39a6c3.717b98",
                "325aebe7.dcf154"
            ]
        ]
    },
    {
        "id": "ea39a6c3.717b98",
        "type": "template",
        "z": "a033ecf7.19ef2",
        "name": "Set Filename",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/data/clientstate/{{payload}}",
        "output": "str",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "651f5e7f.0e76b"
            ]
        ]
    },
    {
        "id": "b01f1e8c.20bff",
        "type": "mqtt in",
        "z": "a033ecf7.19ef2",
        "name": "Listen for lwt Messages",
        "topic": "demo/security/clientstate/lwt",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "ea39a6c3.717b98",
                "6dd181a3.29adf",
                "325aebe7.dcf154"
            ]
        ]
    },
    {
        "id": "651f5e7f.0e76b",
        "type": "file",
        "z": "a033ecf7.19ef2",
        "name": "Delete Client State File",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 860,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d9853e19.30a3a",
        "type": "file",
        "z": "a033ecf7.19ef2",
        "name": "Track LWT messages (Disconnect Monitor)",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6dd181a3.29adf",
        "type": "template",
        "z": "a033ecf7.19ef2",
        "name": "Set Filename",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/data/disconnects/{{payload}}",
        "output": "str",
        "x": 470,
        "y": 280,
        "wires": [
            [
                "d9853e19.30a3a"
            ]
        ]
    },
    {
        "id": "5f577087.ad748",
        "type": "comment",
        "z": "a033ecf7.19ef2",
        "name": "Build Client State Table",
        "info": "",
        "x": 160,
        "y": 380,
        "wires": []
    },
    {
        "id": "9e8a5d8a.96e86",
        "type": "comment",
        "z": "a033ecf7.19ef2",
        "name": "Individual Download (Action when user clicks on single state table entry)",
        "info": "",
        "x": 320,
        "y": 700,
        "wires": []
    },
    {
        "id": "325aebe7.dcf154",
        "type": "debug",
        "z": "a033ecf7.19ef2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "5bed910161c16d32",
        "type": "ui_form",
        "z": "f51fc5811b06d1db",
        "name": "",
        "label": "",
        "group": "6d919544.7af97c",
        "order": 1,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "ClientID",
                "value": "clientid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "command",
                "value": "command",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "type",
                "value": "type",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "clientid": "",
            "command": "",
            "type": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "df70063ecec8bc70"
            ]
        ]
    },
    {
        "id": "b3534f9cb61d9b4c",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "",
        "topic": "demo/security/service/clientreport",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 760,
        "y": 460,
        "wires": []
    },
    {
        "id": "7572d3cf23634844",
        "type": "json",
        "z": "f51fc5811b06d1db",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "daec0ad16f7451c8",
                "0a448f69df9e1fd0"
            ]
        ]
    },
    {
        "id": "33400ea77704797e",
        "type": "ui_gauge",
        "z": "f51fc5811b06d1db",
        "name": "Players Remaining",
        "group": "6d919544.7af97c",
        "order": 4,
        "width": 10,
        "height": 6,
        "gtype": "gage",
        "title": "",
        "label": "Players Remaining",
        "format": "{{value}}",
        "min": 0,
        "max": "1000000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 570,
        "y": 700,
        "wires": []
    },
    {
        "id": "601996accad673a7",
        "type": "counter",
        "z": "f51fc5811b06d1db",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 640,
        "y": 640,
        "wires": [
            [
                "33400ea77704797e",
                "b0eba76ed0fed781",
                "d536d47eb37f2e27"
            ],
            []
        ]
    },
    {
        "id": "406252c46f5ea664",
        "type": "change",
        "z": "f51fc5811b06d1db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 600,
        "wires": [
            [
                "601996accad673a7"
            ]
        ]
    },
    {
        "id": "f5181dc182fad8e4",
        "type": "exec",
        "z": "f51fc5811b06d1db",
        "command": "rm -f -r /data/clientstate/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 460,
        "wires": [
            [],
            [],
            [
                "b3534f9cb61d9b4c",
                "8f3df4e7d4e0cc49"
            ]
        ]
    },
    {
        "id": "ce53caf779cfe16c",
        "type": "template",
        "z": "f51fc5811b06d1db",
        "name": "form JSON of Active Clients",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"title\":\"{{payload}}\",\"description\":\"Connected\",\"icon\":\"https://cdn1.iconfinder.com/data/icons/malware-and-threats/512/Botnet-01-512.png\"}",
        "output": "json",
        "x": 220,
        "y": 700,
        "wires": [
            [
                "ef3d05043e684ac7",
                "601996accad673a7"
            ]
        ]
    },
    {
        "id": "ef3d05043e684ac7",
        "type": "join",
        "z": "f51fc5811b06d1db",
        "name": "Create Single Array of Active Clients",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 270,
        "y": 760,
        "wires": [
            [
                "25ef0bd13c24b8e6",
                "2db17a4d2a50bcf0",
                "070cb4db3e83642a"
            ]
        ]
    },
    {
        "id": "0ddecbcd34622d6b",
        "type": "fs-file-lister",
        "z": "f51fc5811b06d1db",
        "name": "Build List of Active Clients",
        "start": "/data/clientstate",
        "pattern": "*player",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": false,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "ce53caf779cfe16c"
            ]
        ]
    },
    {
        "id": "25ef0bd13c24b8e6",
        "type": "ui_list",
        "z": "f51fc5811b06d1db",
        "group": "6d919544.7af97c",
        "name": "Client State Table",
        "order": 2,
        "width": 10,
        "height": 15,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "4e0adafddd4d4223"
            ]
        ]
    },
    {
        "id": "2db17a4d2a50bcf0",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "",
        "topic": "demo/security/control/clientstate",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "070cb4db3e83642a",
        "type": "debug",
        "z": "f51fc5811b06d1db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "b6a28a787de26ad5",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "",
        "topic": "demo/security/control/announce",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 680,
        "y": 900,
        "wires": []
    },
    {
        "id": "b0eba76ed0fed781",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "",
        "topic": "demo/security/service/playercount",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 740,
        "y": 540,
        "wires": []
    },
    {
        "id": "d536d47eb37f2e27",
        "type": "debug",
        "z": "f51fc5811b06d1db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 680,
        "wires": []
    },
    {
        "id": "daec0ad16f7451c8",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "demo/security/control/moderator",
        "topic": "demo/security/control/moderator",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "8583bba678529cad",
        "type": "mqtt in",
        "z": "f51fc5811b06d1db",
        "name": "",
        "topic": "demo/security/control",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c9fafa.7dd6a5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "1ab7563dbc68d8d8"
            ]
        ]
    },
    {
        "id": "98284bfd0eca47eb",
        "type": "comment",
        "z": "f51fc5811b06d1db",
        "name": "moderator",
        "info": "",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "1ab7563dbc68d8d8",
        "type": "switch",
        "z": "f51fc5811b06d1db",
        "name": "",
        "property": "payload.clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "0a448f69df9e1fd0"
            ],
            [
                "0a448f69df9e1fd0"
            ]
        ]
    },
    {
        "id": "0a448f69df9e1fd0",
        "type": "debug",
        "z": "f51fc5811b06d1db",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 60,
        "wires": []
    },
    {
        "id": "5674c8907343cd74",
        "type": "inject",
        "z": "f51fc5811b06d1db",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "f5181dc182fad8e4"
            ]
        ]
    },
    {
        "id": "8f3df4e7d4e0cc49",
        "type": "delay",
        "z": "f51fc5811b06d1db",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "0ddecbcd34622d6b",
                "406252c46f5ea664"
            ]
        ]
    },
    {
        "id": "df70063ecec8bc70",
        "type": "switch",
        "z": "f51fc5811b06d1db",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exec",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "announce",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "display",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "7572d3cf23634844"
            ],
            [
                "3f9cd0364492c32e"
            ],
            [
                "d913ca179a26384b"
            ]
        ]
    },
    {
        "id": "cf7ddbef1724e73b",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "demo/security/control/announce",
        "topic": "demo/security/control/announce",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 900,
        "y": 220,
        "wires": []
    },
    {
        "id": "d64353ba869ba396",
        "type": "change",
        "z": "f51fc5811b06d1db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "cf7ddbef1724e73b"
            ]
        ]
    },
    {
        "id": "3f9cd0364492c32e",
        "type": "switch",
        "z": "f51fc5811b06d1db",
        "name": "",
        "property": "payload.clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "d64353ba869ba396"
            ],
            [
                "d71c444680f39386"
            ]
        ]
    },
    {
        "id": "fe155e4766859e55",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "send to specific player",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 920,
        "y": 280,
        "wires": []
    },
    {
        "id": "4e0adafddd4d4223",
        "type": "change",
        "z": "f51fc5811b06d1db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.clientid",
                "pt": "msg",
                "to": "payload.title",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 340,
        "wires": [
            [
                "5bed910161c16d32"
            ]
        ]
    },
    {
        "id": "d71c444680f39386",
        "type": "template",
        "z": "f51fc5811b06d1db",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "demo/security/control/announce/{{payload.clientid}}",
        "output": "str",
        "x": 640,
        "y": 260,
        "wires": [
            [
                "fe155e4766859e55"
            ]
        ]
    },
    {
        "id": "d913ca179a26384b",
        "type": "switch",
        "z": "f51fc5811b06d1db",
        "name": "",
        "property": "payload.clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "fb9d6d48ec172746"
            ],
            [
                "95bd56eaa881bd02"
            ]
        ]
    },
    {
        "id": "fb9d6d48ec172746",
        "type": "change",
        "z": "f51fc5811b06d1db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 300,
        "wires": [
            [
                "d2d175611d576066"
            ]
        ]
    },
    {
        "id": "d2d175611d576066",
        "type": "mqtt out",
        "z": "f51fc5811b06d1db",
        "name": "demo/security/control/display",
        "topic": "demo/security/control/display",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9fafa.7dd6a5",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "95bd56eaa881bd02",
        "type": "template",
        "z": "f51fc5811b06d1db",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "demo/security/control/display/{{payload.clientid}}",
        "output": "str",
        "x": 620,
        "y": 360,
        "wires": [
            [
                "fe155e4766859e55"
            ]
        ]
    },
    {
        "id": "14a75a2fcf8e7c05",
        "type": "inject",
        "z": "f51fc5811b06d1db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "b3534f9cb61d9b4c"
            ]
        ]
    },
    {
        "id": "76a947a7a57f3add",
        "type": "inject",
        "z": "f51fc5811b06d1db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 520,
        "wires": [
            [
                "0ddecbcd34622d6b"
            ]
        ]
    },
    {
        "id": "2694e49e6ae7887b",
        "type": "ui_button",
        "z": "f51fc5811b06d1db",
        "name": "",
        "group": "6d919544.7af97c",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "reset player list",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "8f3df4e7d4e0cc49",
                "f5181dc182fad8e4"
            ]
        ]
    },
    {
        "id": "178a37e9a7f92be3",
        "type": "inject",
        "z": "f51fc5811b06d1db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 1000,
        "wires": [
            [
                "401b14c76d4ee54c"
            ]
        ]
    },
    {
        "id": "401b14c76d4ee54c",
        "type": "change",
        "z": "f51fc5811b06d1db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1020,
        "wires": [
            []
        ]
    }
]
